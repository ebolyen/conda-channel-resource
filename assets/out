#!/usr/bin/env python

import os
import os.path
import sys
import json

import common


def main(source, params, inpath):
    pkg_name = source['pkg_name']
    data = common.ChannelData(path=os.path.join(inpath, params['from']))

    pkg_versions = data.get_versions(pkg_name)
    if len(pkg_versions) != 1:
        if not pkg_versions:
            raise Exception('No packages found with name: %r' % pkg_name)
        else:
            raise Exception('Multiple versions found for %r: %r'
                            % (pkg_name, pkg_versions))

    pkg_version = pkg_versions.pop()
    with common.connect(source) as conn:
        relpaths = conn.upload_local_data(data, pkg_name, pkg_version)

    return {'version': common.to_version(pkg_version),
            'metadata': [{'name': 'files', 'value': relpaths}]}


if __name__ == '__main__':
    options = json.load(sys.stdin)
    response = main(options['source'],
                    options.get('params', {}),
                    sys.argv[1])
    print(json.dumps(response))
