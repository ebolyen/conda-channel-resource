#!/usr/bin/env python

import io
import json
from ftplib import FTP
from sys import stdin
from collections import defaultdict
from pkg_resources import parse_version

# resources:
#   - name: foo
#     type: conda-channel-resource
#     source:
#       host
#       username
#       password
#       package
#       channel_root

payload = json.load(stdin)
source = payload['source']
version = payload.get('version')

with FTP(source['host'], source['username'], source['password']) as ftp:
    ftp.cwd(source['channel_root'])
    with io.StringIO() as fh:
        # TODO: Account for other archs
        ftp.retrbinary('RETR noarch/repodata.json', fh.write)
        repodata = json.loads(fh.getvalue())

pkg_versions = defaultdict(set)
for package in repodata['packages'].values():
    pkg_versions[package['name']].add(package['version'])

versions = pkg_versions[source['package']]
sorted_versions = sorted(versions, key=parse_version)
if version is None:
    new_versions = [{'version': sorted_versions[-1]}]
else:
    version = version['version']
    try:
        i = sorted_versions.index(version)
    except IndexError:
        new_versions = [{'version': sorted_versions[-1]}]
    else:
        new_versions = [{'version': x} for x in sorted_versions[i:]]

# Concourse is expecting to see this in stdout
print(json.dumps(new_versions))
